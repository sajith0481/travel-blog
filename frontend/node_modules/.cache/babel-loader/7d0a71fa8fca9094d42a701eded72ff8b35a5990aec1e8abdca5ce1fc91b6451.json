{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sajit\\\\Documents\\\\Sharanya_codes\\\\TravelBlog\\\\travel_blog_new\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// This component contains a form which is used to register a new user with the application.\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { RegistrationAPI } from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Reset error message\n    setErrorMessage('');\n\n    // Basic validation\n    if (!email || !username || !password || !secretKey) {\n      setErrorMessage('All fields, including the Secret Key, are required.');\n      return;\n    }\n    try {\n      const response = await RegistrationAPI({\n        username,\n        email,\n        password,\n        secretKey\n      });\n      if (response.ok) {\n        // Navigate to login page or anywhere else post-registration\n        navigate('/login');\n      } else {\n        setErrorMessage('Registration failed: ' + response.statusText);\n      }\n    } catch (error) {\n      setErrorMessage('Error during registration: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Secret Key (Admins Only):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: secretKey,\n        onChange: e => setSecretKey(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMessage\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please note that only authorized users with administrative privileges can register and create posts on this platform. To gain access, you must have a valid secret key provided by the administrator.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Register, \"lEwhZmGxnSJtIo9mVXFbd18VjsA=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","RegistrationAPI","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","email","setEmail","secretKey","setSecretKey","errorMessage","setErrorMessage","navigate","handleSubmit","event","preventDefault","response","ok","statusText","error","message","onSubmit","children","type","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/sajit/Documents/Sharanya_codes/TravelBlog/travel_blog_new/frontend/src/components/Register.js"],"sourcesContent":["// This component contains a form which is used to register a new user with the application.\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { RegistrationAPI } from '../utils/Api';\r\n\r\nfunction Register() {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [secretKey, setSecretKey] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(''); \r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        // Reset error message\r\n        setErrorMessage('');\r\n\r\n        // Basic validation\r\n        if (!email || !username || !password || !secretKey) {\r\n            setErrorMessage('All fields, including the Secret Key, are required.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await RegistrationAPI({ username, email, password, secretKey });\r\n            if (response.ok) {\r\n                // Navigate to login page or anywhere else post-registration\r\n                navigate('/login');\r\n            } else {\r\n               \r\n                setErrorMessage('Registration failed: ' + response.statusText);\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage('Error during registration: ' + error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n                Email:\r\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n            </label>\r\n            <label>\r\n                Username:\r\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n            </label>\r\n            <label>\r\n                Password:\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n            </label>\r\n            <label>\r\n                Secret Key (Admins Only):\r\n                <input type=\"text\" value={secretKey} onChange={(e) => setSecretKey(e.target.value)} required />\r\n            </label>\r\n            <button type=\"submit\">Register</button>\r\n            {errorMessage && <p className=\"errorMessage\">{errorMessage}</p>}\r\n            <p>\r\n                Please note that only authorized users with administrative privileges can register and create posts on this platform.\r\n                To gain access, you must have a valid secret key provided by the administrator.\r\n            </p>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}